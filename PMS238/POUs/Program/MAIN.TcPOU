<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{3619e49b-d106-43f4-aab7-1d16843c522e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	fb_timeCrossCheck	: FB_TimeCrossCheck2System;
	eEgxRead	: UINT := WAIT_EGX_FREE;
END_VAR

VAR CONSTANT
	WAIT_EGX_FREE	: UINT := 0;
	EGX_231 : UINT := 231;
	EGX_232 : UINT := 232;
	EGX_233 : UINT := 233;
	EGX_234 : UINT := 234;
	EGX_235 : UINT := 235;
	EGX_236 : UINT := 236;
	EGX_237 : UINT := 237;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[fb_timeCrossCheck(	TimeStruct_Sys1 := pmDev.AvevaTimeStruct,
					TimeStruct_Sys2 := pmDev.NT_GetTime.TIMESTR,
					secondDifferentAllow := pmdev.SecondDifferentAllow,
					bErrorTimeTwoSystem => pmDev.bAlarmDifferentTime2System);


pmdev.NT_GetTime(START := FALSE);
pmdev.NT_GetTime(START := TRUE,
					TIMESTR => GVL.fbMachineTime.systemTime); 
					
IP231();
IP232();
IP233();
IP234();
IP235();
IP236();
IP237();
CASE eEgxRead OF
	WAIT_EGX_FREE :
		IF NOT IP231.Busy
		AND NOT IP232.Busy
		AND NOT IP233.Busy
		AND NOT IP234.Busy
		AND NOT IP235.Busy
		AND NOT IP236.Busy
		AND NOT IP237.Busy
		THEN
			eEgxRead := EGX_231;
		END_IF
		
	EGX_231 :
		IP231.Mr_Read();
		IF NOT IP231.Busy THEN
			eEgxRead := EGX_232;
		END_IF
		
	EGX_232 :
		IP232.Mr_Read();
		IF NOT IP232.Busy THEN
			eEgxRead := EGX_233;
		END_IF
		
	EGX_233 :
		IP233.Mr_Read();
		IF NOT IP233.Busy THEN
			eEgxRead := EGX_234;
		END_IF
		
	EGX_234 :
		IP234.Mr_Read();
		IF NOT IP234.Busy THEN
			eEgxRead := EGX_235;
		END_IF
		
	EGX_235 :
		IP235.Mr_Read();
		IF NOT IP235.Busy THEN
			eEgxRead := EGX_236;
		END_IF
		
	EGX_236 :
		IP236.Mr_Read();
		IF NOT IP236.Busy THEN
			eEgxRead := EGX_237;
		END_IF
		
	EGX_237 :
		IP237.Mr_Read();
		IF NOT IP237.Busy THEN
			eEgxRead := WAIT_EGX_FREE;
		END_IF
END_CASE

pmdev.bTrigReadCOmmision := FALSE;
CalculateVirtualMeter(	MeterMain := pmDev.DB05_10_5500 ,
						MeterSub := pmDev.DB05_09_5350,
						MeterVirtual := pmDev.PowerMeter_Db1_2);
						
 CalculateVirtualMeter( MeterMain := pmDev.DB04_06_5500,
                      MeterSub := pmDev.DB04_05_5350,
                       MeterVirtual :=  pmDev.PowerMeter_Db2_2);
 
 CalculateVirtualMeter( MeterMain := pmDev.DB04_04_5500,
                      MeterSub :=  pmDev.DB04_03_5350,
                       MeterVirtual :=  pmDev.PowerMeter_db3_2);
 
 CalculateVirtualMeter( MeterMain := pmDev.DB04_02_5500,
                      MeterSub := pmDev.DB04_01_5350,
                       MeterVirtual :=  pmDev.PowerMeter_db4_2);
 
 CalculateVirtualMeter( MeterMain := pmDev.DB03_04_5500,
                      MeterSub := pmDev.DB03_03_5350,
                       MeterVirtual :=  pmDev.PowerMeter_db5_2);
 
 CalculateVirtualMeter( MeterMain := pmDev.DB03_06_5500,
                      MeterSub := pmDev.DB03_05_5350,
                       MeterVirtual :=  pmDev.powerMeter_db6_2);
 
 CalculateVirtualMeter( MeterMain := pmDev.DB03_02_5500,
                      MeterSub := pmDev.DB03_01_5350,
                       MeterVirtual :=  pmDev.PowerMeter_db7_2);
 
 CalculateVirtualMeter( MeterMain := pmDev.DB05_04_5500,
                      MeterSub := pmDev.DB05_03_5350,
                       MeterVirtual :=  pmDev.PowerMeter_db8_2);
 
 CalculateVirtualMeter( MeterMain := pmDev.DB05_06_5500,
                      MeterSub := pmDev.DB05_05_5350,
                       MeterVirtual :=  pmDev.PowerMeter_db9_2);
 
 CalculateVirtualMeter( MeterMain := pmDev.DB05_08_5500,
                      MeterSub := pmDev.DB05_07_5350,
                       MeterVirtual :=  pmDev.PowerMeter_db10_2);
 
 CalculateVirtualMeter( MeterMain := pmDev.DB01_04_5500,
                      MeterSub := pmDev.DB01_03_5350,
                       MeterVirtual :=  pmDev.PowerMeter_db11_2);
 
 CalculateVirtualMeter( MeterMain :=  pmDev.DB01_01_5500,
                      MeterSub := pmDev.DB01_02_5350,
                       MeterVirtual :=  pmDev.PowerMeter_db12_2);
 
 CalculateVirtualMeter( MeterMain := pmDev.DB02_02_5500,
                      MeterSub := pmDev.DB02_01_5350,
                       MeterVirtual :=  pmDev.PowerMeter_db13_2);
 
 CalculateVirtualMeter( MeterMain := pmDev.DB02_06_5500,
                      MeterSub := pmDev.DB02_05_5350,
                       MeterVirtual :=  pmDev.PowerMeter_db14_2);
 
 CalculateVirtualMeter( MeterMain := pmDev.DB02_04_5500,
                      MeterSub := pmDev.DB02_03_5350,
                       MeterVirtual :=  pmDev.PowerMeter_db15_2);
					   
 

	

	
 ]]></ST>
    </Implementation>
    <Method Name="CalculateVirtualMeter" Id="{94a54871-6893-4261-8e03-616b0f50695a}">
      <Declaration><![CDATA[METHOD CalculateVirtualMeter : BOOL
VAR_INPUT
	MeterMain	: REFERENCE TO  ST_PowerMeter;// meterVirtual := MeterMain - MeterSub
	MeterSub	: REFERENCE TO ST_PowerMeter;// meterVirtual := MeterMain - MeterSub
	MeterVirtual : REFERENCE TO ST_PowerMeter; // meterVirtual := MeterMain - MeterSub
END_VAR
VAR_OUTPUT
	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[	MeterVirtual.Basic.Current_Avg := MeterMain.Basic.Current_Avg - MeterSub.Basic.Current_Avg;
	MeterVirtual.Basic.Real_PowerTotal := MeterMain.Basic.Real_PowerTotal - MeterSub.Basic.Real_PowerTotal;
	MeterVirtual.Basic.RealEnergy_IntoLoad  := MeterMain.Basic.RealEnergy_IntoLoad - MeterSub.Basic.RealEnergy_IntoLoad;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="MAIN">
      <LineId Id="20105" Count="8" />
      <LineId Id="20195" Count="0" />
      <LineId Id="20114" Count="6" />
      <LineId Id="20205" Count="0" />
      <LineId Id="20215" Count="0" />
      <LineId Id="20217" Count="1" />
      <LineId Id="20220" Count="4" />
      <LineId Id="20227" Count="0" />
      <LineId Id="20225" Count="0" />
      <LineId Id="20219" Count="0" />
      <LineId Id="20226" Count="0" />
      <LineId Id="20209" Count="0" />
      <LineId Id="20228" Count="4" />
      <LineId Id="20210" Count="0" />
      <LineId Id="20234" Count="2" />
      <LineId Id="20233" Count="0" />
      <LineId Id="20261" Count="0" />
      <LineId Id="20211" Count="0" />
      <LineId Id="20238" Count="2" />
      <LineId Id="20237" Count="0" />
      <LineId Id="20241" Count="0" />
      <LineId Id="20212" Count="0" />
      <LineId Id="20243" Count="2" />
      <LineId Id="20242" Count="0" />
      <LineId Id="20254" Count="0" />
      <LineId Id="20213" Count="0" />
      <LineId Id="20247" Count="2" />
      <LineId Id="20246" Count="0" />
      <LineId Id="20255" Count="0" />
      <LineId Id="20214" Count="0" />
      <LineId Id="20251" Count="2" />
      <LineId Id="20250" Count="0" />
      <LineId Id="20256" Count="0" />
      <LineId Id="20206" Count="0" />
      <LineId Id="20258" Count="2" />
      <LineId Id="20257" Count="0" />
      <LineId Id="20207" Count="0" />
      <LineId Id="20121" Count="66" />
      <LineId Id="6718" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.CalculateVirtualMeter">
      <LineId Id="12" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>